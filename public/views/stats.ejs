<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PottyPlanner</title>
    <link rel="icon" class="favicon" type="image/x-icon" href="/images/logo.png">
    <link rel="stylesheet" href="/css/stats.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script id="classListData" type="application/json">
        <%- JSON.stringify(students) %>
    </script>
</head>

<header>
    <div class="logo">
      <a href="/"><img src="/images/logo.png"></a>
    </div>
    <div class="website-name">Potty Planner</div>
    <input type="checkbox" id="active">
    <label for="active" class="menu-btn">
        <img src="/images/ham-menu.svg" alt="Menu Icon">
    </label>
    <div class="wrapper">
        <ul>
            <li><a href="/">Home</a></li>
            <% if (userId) { %>
                <li><a href="/profiles">Students</a></li>
                <li><a href="/stats">Stats</a></li>
                <li><a href="/feedback">Feedback</a></li>
                <li><a href="/logout">Logout</a></li>
            <% } else { %>
                <li><a href="/login">Login</a></li>
                <li><a href="/register">Register</a></li>
            <% } %>
        </ul>
    </div>
</header>

<body style="background-image: url('/images/Hallway.png'); background-size: cover; background-repeat: no-repeat; background-attachment: fixed;"></body>
    <header>
        <!-- ...existing code... -->
    </header>
    <div class="container" id="statsContainer">
        <!-- Graphs will be injected here -->
    </div>
    <script>
// filepath: /workspaces/pottyPlanner-ASHCapstone/public/views/stats.ejs (inline script)
const students = JSON.parse(document.getElementById('classListData').textContent);

async function fetchStudentStats(studentName) {
    const res = await fetch(`/getStudentStats?studentName=${encodeURIComponent(studentName)}`);
    if (!res.ok) return null;
    return await res.json();
}

function formatMinutes(mins) {
    if (mins < 1) return `${Math.round(mins * 60)} sec`;
    return `${mins.toFixed(1)} min`;
}

async function renderStats() {
    const container = document.getElementById('statsContainer');
    for (const student of students) {
        const stats = await fetchStudentStats(student);
        // stats should be { periods: [minutesP1, minutesP2, minutesP3, minutesP4] }
        const periods = stats?.periods || [0,0,0,0];

        // Create elements
        const div = document.createElement('div');
        div.className = 'student-graph';
        div.innerHTML = `
            <h2>${student}</h2>
            <canvas id="chart-${student.replace(/\s/g, '')}" width="400" height="200"></canvas>
        `;
        container.appendChild(div);

        // Draw chart
        new Chart(document.getElementById(`chart-${student.replace(/\s/g, '')}`), {
            type: 'bar',
            data: {
                labels: ['Period 1', 'Period 2', 'Period 3', 'Period 4'],
                datasets: [{
                    label: 'Total Potty Time (minutes)',
                    data: periods,
                    backgroundColor: [
                        '#4e79a7', '#f28e2b', '#e15759', '#76b7b2'
                    ]
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        title: { display: true, text: 'Minutes' }
                    }
                }
            }
        });
    }
}

renderStats();
    </script>
</body>
</html>